apiVersion: v1
kind: ServiceAccount
metadata:
  name: golang-starter-service-account
  namespace: golang-starter
secrets:
  - name: golang-starter-registry-credentials
imagePullSecrets:
  - name: golang-starter-registry-credentials
---
apiVersion: kpack.io/v1alpha1
kind: Builder
metadata:
  name: golang-starter-builder
  namespace: golang-starter
spec:
  serviceAccount: golang-starter-service-account
  tag: registry.$REGISTRY_DOMAIN/kpack/builder
  stack:
    name: paketo-base
    kind: ClusterStack
  store:
    name: paketo-default
    kind: ClusterStore
  order:
    - group:
        - id: paketo-buildpacks/go
---
apiVersion: kpack.io/v1alpha1
kind: Image
metadata:
  name: golang-starter-image
  namespace: golang-starter
spec:
  tag: registry.$REGISTRY_DOMAIN/kpack/golang-starter
  serviceAccount: golang-starter-service-account
  builder:
    name: golang-starter-builder
    kind: Builder
  source:
    git:
      url: https://github.com/initialcapacity/golang-starter
      revision: main
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: golang-starter
  name: golang-starter-image-role
rules:
  - apiGroups: [ "kpack.io", "", "networking.k8s.io", "apps" ]
    resources: [ "images", "builds", "pods", "pods/log", "services", "ingresses", "deployments" ]
    verbs: [ "get", "list", "watch", "create", "update", "patch", "delete" ]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: golang-starter-image-role-binding
  namespace: golang-starter
subjects:
  - kind: ServiceAccount
    name: golang-starter-service-account
    apiGroup: ""
roleRef:
  kind: Role
  name: golang-starter-image-role
  apiGroup: ""